# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-10-18 11:55
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Auteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('promo', models.IntegerField(default=2015)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('public', models.BooleanField(default=False)),
                ('titre_short', models.CharField(default='cat', max_length=100)),
                ('color', models.CharField(default='rgba(26, 188, 156,1.0)', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epingle', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Favorite_proj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epingle', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Implique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Jtx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo', models.IntegerField()),
                ('devise', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Like_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Like_comment_proj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Messagelive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1000)),
                ('aprrouve', models.BooleanField()),
                ('deja_envoye', models.BooleanField()),
                ('prio', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['titre_playlist'],
            },
        ),
        migrations.CreateModel(
            name='Proj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('date', models.DateField(default=datetime.date.today)),
                ('promo', models.IntegerField(default=2015)),
                ('views', models.IntegerField(default=0)),
                ('description', models.CharField(default='Pas de description disponible.', max_length=1000)),
                ('image', models.CharField(default='/videos/default_proj.jpg', max_length=2000)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Category')),
            ],
            options={
                'ordering': ['-promo', '-date'],
            },
        ),
        migrations.CreateModel(
            name='Projvue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.date.today)),
                ('credibilite', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Proj')),
            ],
        ),
        migrations.CreateModel(
            name='Relation_auteur_video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Auteur')),
            ],
        ),
        migrations.CreateModel(
            name='Relation_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=1000)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Relation_comment_proj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=1000)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('proj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Proj')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Relation_proj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordre', models.IntegerField(default=0)),
                ('proj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Proj')),
            ],
            options={
                'ordering': ['ordre'],
            },
        ),
        migrations.CreateModel(
            name='Relation_tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Titreplaylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=1000)),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profil', models.CharField(choices=[('0', 'admin'), ('1', 'jtxman'), ('2', 'etudiant'), ('3', 'dfhm')], default='2', max_length=1)),
                ('promo', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('date', models.DateField(default=datetime.date.today)),
                ('hd', models.CharField(default='', max_length=1000)),
                ('md', models.CharField(default='', max_length=1000)),
                ('sd', models.CharField(default='', max_length=1000)),
                ('screenshot', models.CharField(default='', max_length=1000)),
                ('subtitles', models.CharField(default='', max_length=1000)),
                ('promo', models.IntegerField(default=2015)),
                ('views', models.IntegerField(default=0)),
                ('duree', models.IntegerField(default=0)),
                ('description', models.CharField(default='Pas de description disponible.', max_length=1000)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Category')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Videovue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('credibilite', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Video')),
            ],
        ),
        migrations.AddField(
            model_name='titreplaylist',
            name='last_video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='videos.Video'),
        ),
        migrations.AddField(
            model_name='relation_tag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Tag'),
        ),
        migrations.AddField(
            model_name='relation_tag',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Video'),
        ),
        migrations.AddField(
            model_name='relation_proj',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Video'),
        ),
        migrations.AddField(
            model_name='relation_comment',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Video'),
        ),
        migrations.AddField(
            model_name='relation_auteur_video',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Video'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='titre_playlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='titre_playlist', to='videos.Titreplaylist'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='video_precedente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_precedente', to='videos.Video'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='video_suivante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_suivante', to='videos.Video'),
        ),
        migrations.AddField(
            model_name='like_comment_proj',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Relation_comment_proj'),
        ),
        migrations.AddField(
            model_name='like_comment_proj',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='like_comment',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Relation_comment'),
        ),
        migrations.AddField(
            model_name='like_comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='implique',
            name='grand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grand', to='videos.Tag'),
        ),
        migrations.AddField(
            model_name='implique',
            name='petit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='petit', to='videos.Tag'),
        ),
        migrations.AddField(
            model_name='favorite_proj',
            name='proj',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Proj'),
        ),
        migrations.AddField(
            model_name='favorite_proj',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='favorite',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Video'),
        ),
        migrations.AlterUniqueTogether(
            name='relation_tag',
            unique_together=set([('tag', 'video')]),
        ),
        migrations.AlterUniqueTogether(
            name='relation_proj',
            unique_together=set([('proj', 'video')]),
        ),
        migrations.AlterUniqueTogether(
            name='relation_auteur_video',
            unique_together=set([('video', 'auteur')]),
        ),
        migrations.AlterUniqueTogether(
            name='like_comment_proj',
            unique_together=set([('user', 'comment')]),
        ),
        migrations.AlterUniqueTogether(
            name='like_comment',
            unique_together=set([('user', 'comment')]),
        ),
        migrations.AlterUniqueTogether(
            name='favorite_proj',
            unique_together=set([('user', 'proj')]),
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together=set([('user', 'video')]),
        ),
    ]
